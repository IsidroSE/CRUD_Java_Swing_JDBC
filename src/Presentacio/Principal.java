/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacio;

import BLL.ArticleBLL;
import BLL.UsersBLL;
import Entitat.Article;
import Entitat.User;
import java.awt.Rectangle;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Isidr
 */
public class Principal extends javax.swing.JFrame {

    private ModeloTabla_Articles model;
    private int posTabla;
    private boolean conectat;
    private Panel_Login pLogin;
    private String user;
    private String pass;
    
    public Principal() {
        
        UsersBLL uBLL = new UsersBLL();
        ArrayList <User> users = null;
        
        try {
            users = uBLL.obtenirUsuaris();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error",
                JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        
        //Finestra de Login
        conectat = false;
        pLogin = new Panel_Login();
        
        while (!conectat) {
            if(JOptionPane.showConfirmDialog(this, pLogin, "Introduix les següents dades", JOptionPane.OK_CANCEL_OPTION,
            JOptionPane.PLAIN_MESSAGE) == JOptionPane.OK_OPTION) {
                user = pLogin.getUser();
                pass = pLogin.getPass();
                if (user.length() < 1) {
                    pLogin.setError("El camp de nom de usuari está vuit.");
                }
                else if (pass.length() < 1) {
                    pLogin.setError("El camp de contrasenya está vuit.");
                }
                else {
                    if (users != null) {
                        User selectedUser = new User();
                        selectedUser.setUsuari(user);
                        int pos = -1;
                        boolean trobat = false;
                        for (int i=0 ; i<users.size() || !trobat ; i++) {
                            if (users.get(i).getUsuari().equals(user)) {
                                pos = i;
                                trobat = true;
                            }
                        }
                        
                        if (trobat) {
                            if (users.get(pos).getPass().equals(pass)) {
                                conectat = true;
                            }
                            else {
                                pLogin.setError("Contrasenya incorrecta.");
                            }
                        }
                        else {
                            pLogin.setError("El usuari indicat no exixteix.");
                        }
                    }
                }
                pLogin.netejarText();
            }
            else {
                System.exit(0);
            }
        }
        
        initComponents();
        
        //Seleccionem per defecte la fila 0 de la tabla
        tArticles.changeSelection(0, ICONIFIED, false, false);
        posTabla = 0;
        carregarDades();
        model = (ModeloTabla_Articles)tArticles.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lID = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        lNom = new javax.swing.JLabel();
        tfNom = new javax.swing.JTextField();
        lDescripcio = new javax.swing.JLabel();
        tfDescripcio = new javax.swing.JTextField();
        lFamilia = new javax.swing.JLabel();
        tfFamilia = new javax.swing.JTextField();
        lPreu = new javax.swing.JLabel();
        tfPreu = new javax.swing.JTextField();
        lData = new javax.swing.JLabel();
        tfData = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        bNuevo = new javax.swing.JButton();
        bModificar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        bFirst = new javax.swing.JButton();
        bPrevious = new javax.swing.JButton();
        bNext = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();

        //ModeloTabla_Articles miModelo = new ModeloTabla_Articles();

        //TableSorter modeloOrdenado = new TableSorter(miModelo);
        tArticles = new javax.swing.JTable();
        //JTableHeader header = tArticles.getTableHeader();
        //modeloOrdenado.setTableHeader(header);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setLayout(new java.awt.GridLayout(3, 4));

        lID.setText("ID:");
        jPanel6.add(lID);

        tfID.setEditable(false);
        jPanel6.add(tfID);

        lNom.setText("Nom:");
        jPanel6.add(lNom);
        jPanel6.add(tfNom);

        lDescripcio.setText("Descripcio:");
        jPanel6.add(lDescripcio);
        jPanel6.add(tfDescripcio);

        lFamilia.setText("Familia:");
        jPanel6.add(lFamilia);
        jPanel6.add(tfFamilia);

        lPreu.setText("Preu:");
        jPanel6.add(lPreu);
        jPanel6.add(tfPreu);

        lData.setText("Data");
        jPanel6.add(lData);

        tfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jPanel6.add(tfData);

        bNuevo.setText("Nuevo");
        bNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNuevoActionPerformed(evt);
            }
        });
        jPanel5.add(bNuevo);

        bModificar.setText("Modificar");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });
        jPanel5.add(bModificar);

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });
        jPanel5.add(bEliminar);

        bReset.setText("Reset");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });
        jPanel5.add(bReset);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bFirst.setText("|<");
        bFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFirstActionPerformed(evt);
            }
        });
        jPanel4.add(bFirst);

        bPrevious.setText("<");
        bPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPreviousActionPerformed(evt);
            }
        });
        jPanel4.add(bPrevious);

        bNext.setText(">");
        bNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextActionPerformed(evt);
            }
        });
        jPanel4.add(bNext);

        try {
            tArticles.setModel(new ModeloTabla_Articles());
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error",
                JOptionPane.ERROR_MESSAGE);
            dispose();
        }
        tArticles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tArticlesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tArticles);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void netejarPantalla() {
        tfID.setText("");
        tfNom.setText("");
        tfDescripcio.setText("");
        tfFamilia.setText("");
        tfPreu.setText("");
        tfData.setText("");
    }
    
    public void carregarDades () {
        try {
            FormatoFecha ff = new FormatoFecha();
            
            int filaSeleccionada = tArticles.getSelectedRow();
            
            int id = (int)tArticles.getValueAt(filaSeleccionada, 0);
            String nom = (String)tArticles.getValueAt(filaSeleccionada, 1);
            String descripcio = (String)tArticles.getValueAt(filaSeleccionada, 2);
            int familia = (int)tArticles.getValueAt(filaSeleccionada, 3);
            int preu = (int)tArticles.getValueAt(filaSeleccionada, 4);
            Date data = (Date)tArticles.getValueAt(filaSeleccionada, 5);

            tfID.setText(id+"");
            tfNom.setText(nom);
            tfDescripcio.setText(descripcio);
            tfFamilia.setText(familia+"");
            tfPreu.setText(preu+"");
            tfData.setText(ff.valueToString(data));
            
        }
        catch (ParseException e) {
            String error = "Ha habido un error al convertir la fecha.";
            JOptionPane.showMessageDialog(this, error, "Error",
                JOptionPane.ERROR_MESSAGE);
            netejarPantalla();
        }
    }
    
    private void bNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNuevoActionPerformed
        
        Panel_Conformacio pc = new Panel_Conformacio();
        
        String[] options = {"OK"};
        int selectedOption = JOptionPane.showOptionDialog(null, pc, "Confirmar la operació",
                JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[0]);
        
        if(selectedOption == 0) {
            if (pc.getCB().equals("Si") && pc.getConfirmacio().equalsIgnoreCase("CONFIRMAR")) {
                if (tfID.getText().length() == 0) {
                    try {
                        ArticleBLL aBLL = new ArticleBLL();
                        Article article = aBLL.obtindreNovaID();

                        FormatoFecha ff = new FormatoFecha();

                        String nom = tfNom.getText();
                        String descripcio = tfDescripcio.getText();
                        int familia =  Integer.valueOf(tfFamilia.getText());
                        int preu = Integer.valueOf(tfPreu.getText());
                        Date data = (Date)ff.stringToValue(tfData.getText());
                        java.sql.Date data2 = new java.sql.Date(data.getTime());

                        article = new Article(article.getId(), nom, descripcio, familia, preu, data2);

                        aBLL.inserirArticle(article);

                        netejarPantalla();

                        Object[] fila = new Object[6];
                        fila[0] = article.getId();
                        fila[1] = article.getNom();
                        fila[2] = article.getDescripcio();
                        fila[3] = article.getFamilia();
                        fila[4] = article.getPreu();
                        fila[5] = article.getData();
                        model.addRow(fila);
                    }
                    catch (ParseException e) {
                        String error = "Ha habido un error al convertir la fecha, asegurate de haberla escrito con el formato correcto.";
                        JOptionPane.showMessageDialog(this, error, "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                    }
                    catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                    }
                }
                else {
                    String error = "El campo de ID debe estar vacio para poder insertar datos.";
                        JOptionPane.showMessageDialog(this, error, "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                }
            }
        }
    }//GEN-LAST:event_bNuevoActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        
        Panel_Conformacio pc = new Panel_Conformacio();
        
        String[] options = {"OK"};
        int selectedOption = JOptionPane.showOptionDialog(null, pc, "Confirmar la operació",
                JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[0]);
        
        
        if(selectedOption == 0) {
            if (pc.getCB().equals("Si") && pc.getConfirmacio().equalsIgnoreCase("CONFIRMAR")) {
                if (tfID.getText().length() > 0) {
                    try {
                        int idSelecionada = Integer.valueOf(tfID.getText());

                        ArticleBLL aBLL = new ArticleBLL();
                        Article article;

                        FormatoFecha ff = new FormatoFecha();

                        int id = Integer.valueOf(tfID.getText());
                        String nom = tfNom.getText();
                        String descripcio = tfDescripcio.getText();
                        int familia =  Integer.valueOf(tfFamilia.getText());
                        int preu = Integer.valueOf(tfPreu.getText());
                        Date data = (Date)ff.stringToValue(tfData.getText());
                        java.sql.Date data2 = new java.sql.Date(data.getTime());

                        article = new Article(id, nom, descripcio, familia, preu, data2);

                        aBLL.editarArticle(article);

                        netejarPantalla();

                        int filaSeleccionada = tArticles.getSelectedRow();
                        model.setValueAt(nom, filaSeleccionada, 1);
                        model.setValueAt(descripcio, filaSeleccionada, 2);
                        model.setValueAt(familia, filaSeleccionada, 3);
                        model.setValueAt(preu, filaSeleccionada, 4);
                        model.setValueAt(data2, filaSeleccionada, 5);


                    }
                    catch (ParseException e) {
                        String error = "Ha habido un error al convertir la fecha, asegurate de haberla escrito con el formato correcto.";
                        JOptionPane.showMessageDialog(this, error, "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                    }
                    catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                    }
                }
                else {
                    String error = "Debes seleccionar un artículo en la tabla para editarlo.";
                        JOptionPane.showMessageDialog(this, error, "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                }
            }
        }
    }//GEN-LAST:event_bModificarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        
        Panel_Conformacio pc = new Panel_Conformacio();
        
        String[] options = {"OK"};
        int selectedOption = JOptionPane.showOptionDialog(null, pc, "Confirmar la operació",
                JOptionPane.NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[0]);
        
        if(selectedOption == 0) {
            if (pc.getCB().equals("Si") && pc.getConfirmacio().equalsIgnoreCase("CONFIRMAR")) {
                if (tfID.getText().length() > 0) {
                    try {
                        int idSeleccionada = Integer.valueOf(tfID.getText());
                        ArticleBLL aBLL = new ArticleBLL();
                        Article article = new Article(idSeleccionada);
                        aBLL.esborrarArticle(article);

                        netejarPantalla();

                        int filaSeleccionada = tArticles.getSelectedRow();
                        model.removeRow(filaSeleccionada);

                        if (posTabla != 0) {
                            posTabla--;
                        }
                        tArticles.changeSelection(posTabla, ICONIFIED, false, false);
                        carregarDades();

                    }
                    catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                    }
                }
                else {
                    String error = "Debes seleccionar un artículo en la tabla para borrarlo.";
                        JOptionPane.showMessageDialog(this, error, "Error",
                            JOptionPane.ERROR_MESSAGE);
                        netejarPantalla();
                }
            }
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void tArticlesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tArticlesMouseClicked
        posTabla = tArticles.getSelectedRow();
        carregarDades();
    }//GEN-LAST:event_tArticlesMouseClicked

    private void bFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFirstActionPerformed
        posTabla = 0;
        tArticles.changeSelection(posTabla, ICONIFIED, false, false);
        carregarDades();
    }//GEN-LAST:event_bFirstActionPerformed

    private void bPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPreviousActionPerformed
        if (posTabla-1 >= 0) {
            posTabla--;  
            tArticles.changeSelection(posTabla, ICONIFIED, false, false);
            carregarDades();
        }
    }//GEN-LAST:event_bPreviousActionPerformed

    private void bNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextActionPerformed
        if (posTabla+1 < model.getRowCount()) {
            posTabla++;  
            tArticles.changeSelection(posTabla, ICONIFIED, false, false);
            carregarDades();
        }
    }//GEN-LAST:event_bNextActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        netejarPantalla();
    }//GEN-LAST:event_bResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    
    class FormatoFecha extends MaskFormatter {
        
        /** Se construye con el patrón deseado */
        public FormatoFecha() throws ParseException {
            // Las # son cifras y representa "dd/mm/yy"
            super ("##/##/##");
        }
        
        /** Una clase adecuada para convertir Date a String y viceversa de forma cómoda.
        El patrón que pongamos aquí debe cuadrar correctamente con la máscara que hemos puesto en el constructor */
        private SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yy");
        
        /** Convierte el texto del editor en un Date */
        @Override
        public Object stringToValue(String text) throws ParseException {
            return formato.parseObject(text);
        }
        
        /** Redibe un Date o null y debe convertirlo a texto que cumpla el patrón indicado anteriormente */
        @Override
        public String valueToString(Object value) throws ParseException {
            if (value instanceof Date) return formato.format((Date)value);
            return formato.format(new Date());
        }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bFirst;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bNext;
    private javax.swing.JButton bNuevo;
    private javax.swing.JButton bPrevious;
    private javax.swing.JButton bReset;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lData;
    private javax.swing.JLabel lDescripcio;
    private javax.swing.JLabel lFamilia;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lNom;
    private javax.swing.JLabel lPreu;
    private javax.swing.JTable tArticles;
    private javax.swing.JFormattedTextField tfData;
    private javax.swing.JTextField tfDescripcio;
    private javax.swing.JTextField tfFamilia;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNom;
    private javax.swing.JTextField tfPreu;
    // End of variables declaration//GEN-END:variables
}
